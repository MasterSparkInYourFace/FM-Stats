@use "sass:map";
@use "sass:list";
@use "sass:meta";

$colors: (
    bg-main: hsl(233, 47%, 7%),
    bg-card: hsl(244, 38%, 16%),
    accent: hsl(277, 64%, 61%),
    white: hsl(0, 0%, 100%),
    paragraph: hsla(0, 0%, 100%, 0.75),
    stat-hdr: hsla(0, 0%, 100%, 0.6)
);

@function col($c) {
    @return map.get($colors, $c);
}

// cursed mixin. spams media queries all over the page.
// you're welcome for the 2000 hour load times lmaoooooooo
@mixin resp($props...) {
    @at-root {
        @media only screen and (max-width: 375px) {
            // mobile sucks lmaoooo peasant
            & {
                @each $k, $v in meta.keywords($props) {
                    @if list.length($v) > 1 {
                        $pv: list.nth($v, 2);
                        @if $pv != Skip {
                            #{$k}: $pv;
                        }
                    }
                }
            }
        }

        @media only screen and (min-width: 376px) {
            // PC monitor - the only valid display device
            & {
                @each $k, $v in meta.keywords($props) {
                    $pv: list.nth($v, 1);
                    @if $pv != Skip {
                        #{$k}: $pv;
                    }
                }
            }
        }
    }
}

@mixin deffont($name, $variations, $weights: 400) {
    font-family: $name;
    src: url("./fonts/" + $name + "-VariableFont_" + $variations + ".ttf") format(truetype) tech(variations);
    font-weight: $weights;
}

@font-face {
    @include deffont("Inter", "slnt,wght", 400 700);
}

@font-face {
    @include deffont("LexendDeca", "wght");
}

body {
    font-family: Inter;
    font-size: 15px;
    background-color: col(bg-main);
}

#container {
    position: absolute;
    border-radius: 8px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    @include resp(
        $width: 70% 90%,
        $height: 60% 85%
    );
}

#content {
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    box-sizing: border-box;
    padding: 7%;
    height: 100%;
    background-color: col(bg-card);
    @include resp(
        $border-top-left-radius: inherit,
        $border-bottom-left-radius: inherit inherit,
        $border-bottom-right-radius: Skip inherit,
        $height: 100% 66%,
        $text-align: left center
    );
}

#content>h1 {
    margin: 0;
    padding-bottom: 10px;
    font-weight: 700;
    font-size: 30px;
    color: col(white);
}

#content>h1>span {
    color: col(accent);
}

#content>p {
    color: col(paragraph);
}

#statistics {
    display: flex;
    flex-wrap: nowrap;
    width: 100%;
    @include resp(
        $flex-direction: row column,
        $align-items: Skip center,
        $justify-content: space-between space-around,
        $margin-top: auto,
        $margin-bottom: Skip 0%,
        $height: Skip 100%,
    );
}

#statistics>div {
    color: col(stat-hdr);
    font-family: "LexendDeca";
    font-size: 11px;
}

#statistics>div>strong {
    font-family: "Inter";
    color: col(white);
    line-height: 150%;
    @include resp(
        $font-size: 20px 25px
    );
}

#banner-image {
    background-blend-mode: multiply;
    background-color: col(accent);
    background-size: cover;
    position: relative;
    @include resp(
        $background-image:
            url(./images/image-header-desktop.jpg)
            url(./images/image-header-mobile.jpg),
        $width: 50% 100%,
        $height: 100% 33%,
        $float: right,
        $border-top-right-radius: inherit inherit,
        $border-bottom-right-radius: inherit,
        $border-top-left-radius: Skip inherit
    );
}

.attribution {
    color: col(stat-hdr);
    font-size: 11px;
    text-align: center;
}

.attribution>a {
    color: hsl(228, 45%, 44%);
}